1.上报TMS之前所需要处理哪些？
1.将SignRecord转为SignInfo，多处国家和语言
2.TMS执行HuaweiClient获取AccessToken,返回成功执行doRequest，否则回调onFailed
3.设置accessToken和SignInfo，执行Http上传，返回onComplete或者异常onFailed
4.上传服务器不管返回状态

2.保存本地签署记录，协议版本号的获取？
首先会创建保存在本地的签署记录，协议版本号存在与CustomConfig#getUriStatementArgVer最新协议列表和CustomConfig#getUriStatementArgType协议列表里面，如果都不存在那么取默认预置的协议（初始化在App#onCreate里面预置）

3.协议有变更，游客的处理逻辑是？
TermsConfig.getInstance().getTermsConfig()获取协议类型
获取最新协议配置项，如果最新argVer中包含所有argType协议，那么取argVer最新协议配置项，否则取argtype协议配置项，没有返回default预置协议配置项
获取本地协议SignRecord
GuestCheckTermsStatusTask比较签署状态
取协议类型对应的协议配置项，如果本地存在协议但是最新协议配置项不存在则跳过，如果本地不存在那么加入提示列表，两者都存在就比较版本号大小，最新的大则加入提示列表
同意则写入本地文件，否则关闭服务并且退出应用，该部分不会出现保存RECORD_AGREE和设置协议版本号为4的情况，这部分只会出现在启动页检查签署状态里面


4.对接协议服务器的地址，如何获取
HVIRequestConfig配置服务器地址
TermsDefaultConstants默认服务器地址
GetBeinfo完成使用CustomConfig写入Sp中的时候会跟新协议地址
隐私变更弹框点击跳转地址优先获取getBeinfo通过CustomConfig写入Sp里面的地址，如果获取不到使用TermsDefaultConstants获取默认协议地址，协议分4种见下面

5.服务器签署拒绝状态
上传签署记录不管是否成功，不做任何操作
协议变更上传服务器也不做任何操作

6.日志TAG
Constants.LOG_TAG = "TERM_TAG_";


7.当前协议相关配置项有哪些？
getBeInfo解析请求结果GetBeInfoResp并将结果存放在Sp/内存中，敏感的有Map过滤存在内存Map中，其他存放在Sp中
CustomConfig#getConfUrlStatementArgType
得到List<AgrTypeConfig>列表。
包含参数：协议类型argType，是否需要强制签署must "0/1"，初始化版本号baseVersion
CustomConfig#getConfUrlStatementArgVer
得到List<AgrVerConfig>
包含参数：协议类型argType，是否需要强制签署needSign true/false，最新版本号latestVersion

8.协议类型
服务条款版本号格式
114 华为视频用户协议默认版本号
115 华为视频会员协议默认版本号
116 华为视频连续包月默认版本号
10007 华为视频隐私申明默认版本号
用户服务条款
6.0.0.311
6.0.0.313
8.0.6.1
协议版本号
baseVersion:20180617

9.服务器地址默认配置与更改：
	App#oncreate
	HVIConfig.config(new HVIRequestConfig());配置服务器默认地址，HVIRequestConfig分海外和国内
	显示弹框可点击文本获取地址定义默认TermsDefaultConstants地址，优先取getBeinfo返回写入的地址
	BaseBeInfoLoader#saveBeInfo保存运营渠道信息到本地

11.传参为null，getBeinfo未配置时，如何查询签署记录
服务器请求失败或者GetBeInfoResp#getBeinfo为空：
判断是否无服务，LoginConfig从Sp里面获取使用缓存信息
无对应服务和缓存
失败情况下优先使用缓存信息
回调失败设置非本地视频，成功设置为本地视频LoginConfig.getInstance().setLocalVideo(true);
发送成功/失败的EventBus给上层GRSloaderListener接收
上层GRSLoader只处理GetBeInfo成功（包括判断版本号、协议）的结果，成功后表示可以进入在线
否则在登录成功GRSLoader处理判断是否进入本地视频

12.A+B两种类型，A变更 B未变更，会如何
隐私变更流程，取最新上传服务器或者写入本地
将变更的协议类型加入提示列表
游客：
	1.将本地签署记录和LoginConfig中数据进行比较，
	2.获取CustomConfig中最新协议配置，或者基础协议配置，如果基础协力里面不含最新协议，返回基础协议配置项，并且设置need_sign = ture，这里获取优先返回基础协议，只有最新协议全部包含基础协议情况下才返回最新协议
	CustomConfig().getConfUrlStatementArgType()：基础协议类型
CustomConfig().getConfUrlStatementArgVer()：最新协议

3.比较方法：GuestCheckTermsStatusTask#compareSignRecords：
	3.1 检索本地SignRecord和2返回的SignRecord，取2里面对应协议类型的协议，比较版本号，如果2中比较新（获取取本地不存在的新协议）加入noticeList提示列表，本地如果存在新的或者2中不存在的协议那么跳过该协议的比较，不加入提示列表

4.返回记录查询NoticeList中是否存在需要签署来判断显示的提示框类型

用户：
	ServerTermsManager获取服务器2中对应协议的签署记录
1. 如果获取失败，使用CheckLocalRecordTask比较
	1.1.如果签署协议列表是空，返回showNotice null不做任何事（几乎不出现，因为会使用默认的）
1.2.如果本地签署记录是空，TermsConfig查找Sp里面每个协议对应记录，默认为0，获取最新版本号和基础版本，并加入noticeList列表，返回确认类型B弹框
1.3.如果本地签署记录不为空，读取并设置LocalSignRecord的TermsConfig查找Sp里面每个协议的最新版本号，默认为0，判断是否同意，不同意则加入提示列表，不是最新版本（本地版本号小于Sp查询的版本号）也加入提示列表，存在不同意优先返回提示B弹框，其次提示A弹框，其次通知类弹框

2. 如果获取成功，使用CompareSignRecordsTask比较服务器记录和本地
1.如果协议列表为null，那么将本地上传服务器，服务器记录写入到本地，返回null不做提示（几乎不出现）
2.遍历协议列表，得到本地记录与服务器记录，读取Sp里面对应最新版本号并设置，执行compareSignRecord比较
3.本地签署记录大于服务器签署记录（基础版本号或者签署时间比较新）
本地签署同意，本地是最新的，需要上传服务器，不会加入提示列表，否则如果不同意或者不是最新版本号（与2中最新协议版本比较）则会加入提示
4.否则服务器记录新，加入提示列表
如果服务器签署同意，并且服务器版本大于等于2中查找的最新协议版本，那么插入记录到本地DB，否则如果不同意或者不是最新版本号（与2中最新协议版本比较）则会加入提示
返回NoticeList列表和最新记录列表已经需要显示的弹框类型
5.如果本地或者服务器不存在某个协议记录，当作最老版本协议处理，时间和签署时间都是默认0，这样就可以将不存在的同步最新到本地或者服务器
返回提示弹框根据List判断存在不同意优先返回提示B弹框，其次提示A弹框，其次通知类弹框

13.协议变更弹框如何创建，如何获取协议变更内容
创建协议变更弹框如下：
TermUtils#mergeDialogType ：用户获取签署弹框类型
优先返回不同意确认类型B（DialogType.confirmB）弹框，如果新的协议或者需要签署，返回（DialogType.confirm）确认型弹框，否则返回通知类弹框（已同意）
TermUtils#getDialogTypeForGuest ：游客获取签署弹框类型
优先返回需要签署DialogType.confirm确认型弹框A，否则返回DialogType.notice通知类弹框（已同意）
获取协议变更内容如下：
	确认类型B：PrivacyNoticeManager.getInstance().createNoticeDialog，启动PrivacyNoticeActivity页面，传入AGREEMENT_LIST协议类型，和DIALOG_TYPE = DialogType.RECONSIDER_UPDATE_AGREEMENTS
	使用PrivacyNoticeUtils创建高亮可点击文字，根据协议类型，比如（114，115，116，10007，只有这四种情况，没有将不添加高亮），然后用CustomConfig获取Sp存储的对应协议Uri地址，如果不存在那么返回，默认协议地址TermsDefaultConstants中定义，然后设置点击跳转WebActivity页面（子页面ProtocolWebActivity）

	确认类型A：PrivacyNoticeManager.getInstance().createNoticeDialog，启动PrivacyNoticeActivity页面，传入AGREEMENT_LIST协议类型，和DIALOG_TYPE = DialogType.NEED_RESIGN
	无高亮可点击文字，有确定和取消选项，如果点击取消，那么显示通知类型B弹框

	通知类弹框：PrivacyNoticeManager.getInstance().createNoticeDialog，启动PrivacyNoticeActivity页面，传入AGREEMENT_LIST协议类型，和DIALOG_TYPE = DialogType.NOT_NEED_RESIGN
	无高亮可点击文字，只有确定选项，表示同意

注意：3中弹框点击确认都会执行agreeTerms保存本地并选择上传TMS
