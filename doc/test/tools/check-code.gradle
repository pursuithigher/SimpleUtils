apply plugin: 'checkstyle'
apply plugin: 'findbugs'

task findbugs(type: FindBugs, group: 'verification') {
    description 'Run findbugs'
    //检测二进制文件路径
    classes = files("${project.rootDir}/${project.getName()}/build/intermediates/classes")
    source 'src'
    //匹配检测的文件名
    include '**/*.java'
    exclude '**/gen/**'

    //忽略失败，如果检测到bug，task会执行失败，这里设置true会让task继续执行
    ignoreFailures = true
    //分析等级：min  default   max
    effort = "max"
    //检测bug的等级：low   medium  high，等级越高检测越严格
    reportLevel = "high"
    //exclude Filter路径
    excludeFilter file("${project.rootDir}/tools/FindBugsFilter.xml")

    reports {
        xml.enabled = false
        html.enabled = true
        //配置检查报告输出路径
        xml {
            destination "${project.rootDir}/${project.getName()}/build/reports/findbugs/findbugs.xml"
        }
        html {
            destination "${project.rootDir}/${project.getName()}/build/reports/findbugs/findbugs.html"
        }
    }
    classpath = files()
}

task checkstyle(type: Checkstyle, group: 'verification') {
    //检测代码路径
    source 'src/main/java'
    //排除项
    exclude '**/gen/**'
    exclude '**/test/**'
    exclude '**/androidTest/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'

    //配置文件路径
    configFile file("${project.rootDir}/tools/google_checks.xml")

    //判断是否是git pre-commit hook触发的checkstyle
    //如果是，只检测要提交的java文件，否则检测路径下的所有java文件
    //如果不需要hook pre-commit,可移除本段代码，添加include '**/*.java'即可
    if (project.hasProperty('checkCommit') && project.property("checkCommit")) {
        def ft = filterCommitter(getChangeFiles())
        def includeList = new ArrayList<String>()
        for (int i = 0; i < ft.size(); i++) {
            String spliter = ft.getAt(i)
            String[] spliterlist = spliter.split("/")
            String fileName = spliterlist[spliterlist.length - 1]
            includeList.add("**/" + fileName)
        }
        if (includeList.size() == 0) {
            exclude '**/*.java'
        } else {
            include includeList
        }
    } else {
        include '**/*.java'
    }

    // empty classpath
    classpath = files()
}

task checkCode << { print 'checkCode' }
checkCode.dependsOn 'findbugs','checkstyle'



//过滤java文件
def static filterCommitter(String gitstatusinfo) {
    ArrayList<String> filterList = new ArrayList<String>()
    String[] lines = gitstatusinfo.split("\\n")
    for (String line : lines) {
        if (line.contains(".java")) {
            String[] spliters = line.trim().split(" ")
            for (String str : spliters) {
                if (str.contains(".java")) {
                    filterList.add(str)
                }
            }
        }
    }
    return filterList
}

//获取git commit的文件列表
def static getChangeFiles() {
    try {
        String changeInfo = 'git status -s'.execute(null, project.rootDir).text.trim()
        return changeInfo == null ? "" : changeInfo
    } catch (Exception e) {
        return ""
    }
}